{\rtf1\ansi\ansicpg1252\cocoartf1348\cocoasubrtf170
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 AndaleMono;\f2\fnil\fcharset0 Consolas-Bold;
}
{\colortbl;\red255\green255\blue255;\red47\green255\blue18;\red38\green38\blue38;\red245\green245\blue245;
}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{hyphen\}}{\leveltext\leveltemplateid202\'01\uc0\u8259 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid3}
{\list\listtemplateid4\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid301\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{hyphen\}}{\leveltext\leveltemplateid302\'01\uc0\u8259 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid4}
{\list\listtemplateid5\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{hyphen\}}{\leveltext\leveltemplateid401\'01\uc0\u8259 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid5}
{\list\listtemplateid6\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid501\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid6}
{\list\listtemplateid7\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid601\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid7}
{\list\listtemplateid8\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid701\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid8}
{\list\listtemplateid9\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid801\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{hyphen\}}{\leveltext\leveltemplateid802\'01\uc0\u8259 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid803\'02\'02.;}{\levelnumbers\'01;}\fi-360\li2160\lin2160 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{hyphen\}}{\leveltext\leveltemplateid804\'01\uc0\u8259 ;}{\levelnumbers;}\fi-360\li2880\lin2880 }{\listname ;}\listid9}
{\list\listtemplateid10\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{hyphen\}}{\leveltext\leveltemplateid901\'01\uc0\u8259 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid10}
{\list\listtemplateid11\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1001\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid11}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}{\listoverride\listid4\listoverridecount0\ls4}{\listoverride\listid5\listoverridecount0\ls5}{\listoverride\listid6\listoverridecount0\ls6}{\listoverride\listid7\listoverridecount0\ls7}{\listoverride\listid8\listoverridecount0\ls8}{\listoverride\listid9\listoverridecount0\ls9}{\listoverride\listid10\listoverridecount0\ls10}{\listoverride\listid11\listoverridecount0\ls11}}
\margl1440\margr1440\vieww12240\viewh14160\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 \
\
ideas for final project\
\
shirt factory - design\
\
shirt factory - auto-generate pattern\
\
analysis - examine news article text and make visualization of data\'85.\
\
\
\
python class\
\
Day 1\
\
3/16\
\
Download Python\
\
download atom text editor\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\fs28 \cf0 Terminal - bash\
\
Commands
\fs24 \
\
\pard\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li720\fi-720\pardirnatural
\ls1\ilvl0\cf0 {\listtext	\'95	}pwd - \'91print working directory\'92 shows where you are\
{\listtext	\'95	}\
{\listtext	\'95	}ls - shows all folders/files\
{\listtext	\'95	}\
{\listtext	\'95	}mkdir - makes directory\
{\listtext	\'95	}\
{\listtext	\'95	}cd - change directory\
{\listtext	\'95	}\
{\listtext	\'95	}cd .. - goes up one directory\
{\listtext	\'95	}\
{\listtext	\'95	}cd ~ - goes to home directory\
{\listtext	\'95	}\
{\listtext	\'95	}touch - makes a file\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b\fs28 \cf0 *how to run a python file from a directory in Terminal*
\b0\fs24 \
\
go to the directory with the file\
\
type \'93Python3 [filename.ext]\'94 \
\
file will run in terminal\
\

\b storing data\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b0 \cf0 value\
\
data types - \
\pard\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li720\fi-720\pardirnatural
\ls2\ilvl0\cf0 {\listtext	\'95	}\
{\listtext	\'95	}Integer\
{\listtext	\'95	}Float\
{\listtext	\'95	}Strings - python strings are in \'91 \'91 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b \cf0 operators\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b0 \cf0 python operators: +, -, *, /,  *see cheat sheet for all operators*\
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b \cf0 Snake Case\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b0 \cf0 uses underscore or CamelCase\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b \cf0 Assignment Statements \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b0 \cf0 can be value or expression using other values/variables\
\
miles = 400\
\
or \
\
miles_driven = day_total + running_total\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b \cf0 Order of operations\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b0 \cf0 Need to assign variable before you use it\'85\
\
> name = \'91David\'92\
> greeting = \'91Hello.\'92 + name\
> [will print \'91Hello David\'92]\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b \cf0 comment character is #\
\
Function\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b0 \cf0 \'91call\'92 a function\
\
ex:\
> min(5, 30)\
\
gives minimum of two numbers\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b \cf0 Input functions \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b0 \cf0 gets input from user\
\
print()\
\
-prints value as string\
\
input()\
\
-waits for typing on keyboard\
gives string\
\
example: \
\
> input(\'91Name\'92)\
> name [computer will wait for input]\
> [whatever is input will be assigned to the variable \'92Name\'92]\
\
> print(\'91What is your name?\'92)\
>name = input()\
\
\'91Justin\'92\
\
[will print that string]\
[computer waits for user input]\
[user input data will be printed]\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b \cf0 Important 4 steps to programming\
\
1. Initialize/Defin\
\
2. Input\
\
3. Transform data\
\
4. Output\
\
boolean operators\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b0 \cf0 True and False\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b \cf0 Operators and what they do\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b0 \cf0 examples\'85 > < != ==, etc\
\
combo - assign value and operator at same time\
\
> apples_left = apples_left -1\
\
[subtracts one from value and re-assigns)\
\
**
\b can combine assignment and operator
\b0 **  check this!!!\
\
> apples_left -= apples_left\
\
will subtract\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b \cf0 Casting  - changing data type\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b0 \cf0 > str(5)\
\
changes int to string\
\
print(\'91I have \'91 + str(5) + \'91 apples\'92)\
[will print integer (5) as a string]\
\
cast integers to float\
\
> float(5)\
5.0\
\
int / int = floating point number\
\
casting does not round, it truncates\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b \cf0 Branch\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b0 \cf0 if operator\
\
if [boolean value]: \
	block\
\
Blocks and Conditions\
define with 4 spaces (or tab)\
\
else - last can be catch all\
\
elif - alternate value\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b \cf0 Loops\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b0 \cf0 when to loop: do something 3 times\'85write one line, then loop to it 3x\
\
while\
\
while [boolean value]:\
	[code block] - must update the boolean or program will loop\
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b \cf0 Standard Library\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b0 \cf0 comes with python\'85has docs \
\
modules - name for grouping of code\
\
can import modules into other code\
\
example: \'91Random\'92 module - generates random number\
\
> import random\
\
random.rand int(1, 10) - this will make a random number between 1 and 10\
\
. after \'91random\'92 is like a possessive\'85means \'91go inside\'92\
\
see class projects 3, 4 and 5\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b \cf0 more Boolean\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b0 \cf0 boolean operators - not, and, or\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b\fs36 \cf0 Git
\fs24 \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b0 \cf0 Source control - controls source code among many coders\
	tracks changes in a *directory*
\b \
\

\b0 runs from Terminal command prompt\
saves into a special directory called *Repository*\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b \cf0 how to \'91run\'92 Git: type \'91Git\'92 into Terminal prompt
\b0 \
\
Features:\
	> History - compare versions\
	> Merge 2 coder\'92s work on same portion\
	> Multitasking\
	> Back everything up\
\
Git stores \'93Commits\'94\
	> Commit = changes to a directory\
	> Commit builds upon each other\
	> branch 
\fs26 = 
\fs24 Label for a \'91commit\'92 \
\
Terms: Directory, Commit, Branch, Repository\
\
*Terminal commands occur in working directory*\
\

\b *** Make Repository: > git init\
\
startup config:\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f1\b0 \cf2 \cb0 \CocoaLigature0 git config --global user.email "you@example.com"\
  git config --global user.name "Your Name"
\f0 \cf0 \cb1 \CocoaLigature1 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 \
3 Git concepts\
\
\pard\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li720\fi-720\pardirnatural
\ls3\ilvl0\cf0 {\listtext	\'95	}> Wording Directory (WD)\
{\listtext	\'95	}\
{\listtext	\'95	}-	 Add a file to WD \
\pard\tx940\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li1440\fi-1440\pardirnatural
\ls3\ilvl1\cf0 {\listtext	\uc0\u8259 	}
\b > git add file 
\b0 [filename.ext]\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 \
		Remove file from index\
		
\b > git reset file
\b0 \
\pard\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li720\fi-720\pardirnatural
\ls4\ilvl0\cf0 {\listtext	\'95	}\
{\listtext	\'95	}> Index - staging ground before saved \'93changes to be committed\'94\
{\listtext	\'95	}\
\pard\tx940\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li1440\fi-1440\pardirnatural
\ls4\ilvl1\cf0 {\listtext	\uc0\u8259 	}- Make added file into \'91commit\'92\
{\listtext	\uc0\u8259 	}
\b > git commit
\b0 \
\pard\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li720\fi-720\pardirnatural
\ls4\ilvl0\cf0 {\listtext	\'95	}\
{\listtext	\'95	}> HEAD - label always points to most recent\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 \
	*NEW STEP*\
\
	
\f2\b\fs28 \cf3 \cb4 \expnd0\expndtw0\kerning0
git push
\f0\b0\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0  - pushes history to githup, do all other steps\
\
git add \{list files separated by space\} \
	this adds all the files\
\
git add -A\
	this sets up everything in the directory\
\
\
Check what is happening:\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b \cf0 > git status
\b0 \
\
Compare working directory to Index\

\b > git diff\
	- 
\b0 shows changes\
	- [>git diff \{hash] compares changes - can use first part of long hash number\

\b \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b0 \cf0 Compare index to HEAD\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b \cf0 > git diff -- cached\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b0 \cf0 Compare WD to HEAD\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b \cf0 > git diff HEAD\
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b0 \cf0 Commit info\
	- timestamp\
	- message (tells what is changed in commit)\
	- hash (unique ID)\
\
** use [git commit -m \'91describe changes.\'92]\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b \cf0 git log\
	- 
\b0 shows info on changes\
	- hash numbers, etc\
\

\b git reset\
	- 
\b0 takes everything back to WD\
\
comparing versions, look back\
\

\b git diff [
\b0 hash from thing you want to compare to WD]\
\
\'91Q\'92 takes you back to the prompt\
\
**help - to quit: \'91escape\'92 + \'91:q!\'92 at prompt\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f1 \cf2 \cb0 \CocoaLigature0 git remote -v lists local push/fetch repos
\f0 \cf0 \cb1 \CocoaLigature1 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b \cf0 git branching\
	
\b0 see note \'91gitbranching.md\'92 from david\'92s code guild\
\
	branching stays in one repo, 
\b forking 
\b0 makes new repo with same history\
\
	use \'91git checkout -b [filename.ext]\'92\
\
	merge - do in master\
		makes a \'91commit\'92 requires a -m \'91message\'92\
\
		delete branch after you merge\
\

\b\fs28 GitHub
\fs24 \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b0 \cf0 justinglobal\
akqj1000\
\
Git Remotes\
\
link local repo to GitHub\
\
\'93Push\'94 - remote stores local\
\
	\'93Pull\'94 - remote gets stored local\
\
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b\fs36 \cf0 Python functions part 2\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\fs24 \cf0 \
> max(a, b) 
\b0 finds max of two numbers\
\

\b Type-specific functions\
\
	- 
\b0 lives inside type\
	\
	like modules\
	ex: import random\
	random.randint(a, b)\
\

\b Type methods (aka type-fucntions)\
\
	
\b0 > str.upper(\'91hello\'92)\
		makes all upper case\
	> float.is_integer(3.0)\
		\'91True\'92\
		- tells if number is integer\
****\
can call on value \
\
str.upper(\'91Hello\'92)\
\
can be shorthanded\
\
\'91Hello\'92.upper()\
\
ex: \
>>> str.upper('Justin')\
'JUSTIN'\
>>> 'Justin'.upper()\
'JUSTIN'\
>>> float.is_integer(3.4)\
False\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b\fs36 \cf0 Values - with multiple data points\
\
3 types of values\
	List\
	Set\
	Dictionary\
\
when to use:\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\fs24 \cf0 	List - 
\b0 line, order, queue - \
	
\b Set - 
\b0 bag, unique only, is value in?\
	
\b Dictionary
\b0  - map, lookup, table
\b \
\

\fs28 List
\fs24  - 
\b0 ordered sequence of values\
	- 0-indexed\'85.counting starts at zero\
\

\b 	Literals - \
		
\b0 ex: [\'91justin\'92 , \'91matt\'92 , \'91david\'92]\
		[1, 23, 24]\
		empty = []\
	can be nested - [[2,5], [4,5]]  list of lists!\
\

\b\fs28 in 
\b0 function
\fs24 \
\
5 in [2,5]\
>>>false\
\
collection index\
\

\b\fs28 collection[number you want]
\b0\fs24 \
\
[\'91a\'92, \'91b\'92, \'91c\'92][2]\
>>>\'92c\'92\
\

\b\fs28 List
\b0\fs24 \
\
Lists are *mutable*\
\
Assign data point to specific place in ordered list:\
\

\b example:
\b0 \
>>> ages = [41, 16, 22]\
>>> ages\
[41, 16, 22]\
>>> ages[0]=37\
>>> ages\
[37, 16, 22]\
>>> \
\

\b .index(v) 
\b0 - tells where item is in ordered list, finds value\
\

\b .count(v) 
\b0 - counts # of values
\b \
\
.pop(i) - 
\b0 remove specified index in ordered list
\b \
	\
.append 
\b0 - makes an operation on each item in a list\
\
make str into a list use: list()\
\
	example: \
	>>> name = 'david'\
	>>> list(name)\
		['d', 'a', 'v', 'i', 'd']
\b \
\

\fs28 Dictionary 
\fs24 - 
\b0 unordered mapping mapping between 
\b *keys* and any *value*
\b0 \
\
	ex: word > definition \'85each word has one entry, word is like a key, definition is value\
\
	dictionary uses curly brackets \{\}\
\
	Add to dictionary to list\
	\
	Literal: \{\'91apple\'92:0.99 , \'91coke\'92:1.50, \'91joint\'92:5.00\}\
\
	key must bee unique\
		key: \'91apple\'92\
		value: \'910.99\'92\
\
	key can be int, str, False\
\
	nested lists \{\'91ferrari\'92:\{\'91topSpeed\'92:90, \'91modelyear\'92:1977\}\}\
\
	
\b Operators\
	\
	
\b0 keyvalue == , in, \
\
	look up in dictionary \
		dictionary[key]\
\
	dict[key] = value\
\
	
\b Methods for dictionaries\
	\
	
\b0 .keys() - lists keys in a dictionary\
\
	.values() - lists values of dictionary\
\
	.pop(k) - removes value according to what key you use, returns value it is removing\
\
	.get(k, default) - returns value for key, if none exists, will return \'91default\'92\
\
	
\i\b adding item to dictionary
\i0\b0 \
		phone numbers = \{\'91david\'92: \'925032242222\'92\}\
		phone numbers = [\'91Jeff\'92] = \'925032244444\'92\
\
\
Dictionary example:\
\
>>> shopping = \{'apple': 0.99, 'coke': 1.50, 'diet coke': 1.50\}\
>>> print(shopping)\
\{'diet coke': 1.5, 'coke': 1.5, 'apple': 0.99\}\
>>> shopping['broccoi'] = 3.00\
>>> shopping.pop('coke')\
1.5\
>>> print(shopping)\
\{'diet coke': 1.5, 'broccoi': 3.0, 'apple': 0.99\}\
>>> shopping.keys()\
dict_keys(['diet coke', 'broccoi', 'apple'])\
>>> print(shopping['cake']\
lkj\
      \
SyntaxError: invalid syntax\
>>> print(shopping['cake'])\
Traceback (most recent call last):\
  File "<pyshell#242>", line 1, in <module>\
    print(shopping['cake'])\
KeyError: 'cake'\
>>> print(shopping.get('apple'))\
0.99\
>>> \
\

\b see this site for how to get highest value and/or key for a dict: {\field{\*\fldinst{HYPERLINK "http://stackoverflow.com/questions/268272/getting-key-with-maximum-value-in-dictionary"}}{\fldrslt http://stackoverflow.com/questions/268272/getting-key-with-maximum-value-in-dictionary}}
\b0 \
\
\

\b\fs28 Set\
	
\fs24 - unordered collection of unique values\
\
	
\b0 - pile of values\
\
	curly braces\{\}\
\
	no colon \{1,3, 34, 53, 2\}\
\
	empty set - set()\
	>>nothing = set() - empty set\
\
	set operators ==, \'91in\'92\
\
		*value* in *set* returns boolean\
\
	
\b & 
\b0 compares difference between two sets\
\
		
\b &
\b0  *set* & *set*\
			- returns new set with all values that are in both\
	
\b | - pipe 
\b0 union\
\
		returns set of all values in both, no duplicates\
		\{1,2\} | \{2,4\}\
			> 1, 2, 4\
\
	variableName = \{1,2\} | \{2,4\}\
		assigns | the variable name\
\
	
\b - minus operator\
		
\b0 returns difference of two sets, \
\
\

\b Data structures and functions tips and tricks\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b0 \cf0 \
Accessing LIST items:\
\
Do a thing to all times in list - declare variable (ex: fruit) and do what yo want\
\
>>> for fruit in ['apple' , 'pear']:\
	print('eat ' + fruit)\
\
eat apple\
eat pear\
\
\
Accessing Items in *SET*\
\
get range operator\
\
>>> ages = [37, 16, 22]\
>>> ages[1:2]\
[16]\
>>> ages[1:]\
[16, 22]\
>>> ages[:]\
[37, 16, 22]\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b \cf0 get range works on strings\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b0 \cf0 >>> sentence = 'Hi mom'\
\
>>> sentence[0 : -1]\
'Hi mo'\
\
get operators *use negative* counts from the end, backwards\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b \cf0 String Methods\
\
**USE THEsE to manipulate user input**\
\
.split - 
\b0 splits  string by \'91white space\'92\
\
>>> 'Hi mom'.split()\
['Hi', 'mom']\
\
	can split by other delimiters besides \'91space\'92\
\

\b .join - 
\b0 call on something (usually empty space0 and put list in parenth\
\
>>> ''.join(['Hi' , 'mom'])\
'Himom'\
>>> \
\

\b .append 
\b0 - makes an operation on each item in a list\
\
example:\
\
ages = [32, 16, 22]\
\
new_ages = []\
\
for age in ages:\
        updated_age = age +1\
        new_ages.append(updated_age)\
\
print(new_ages)\
\

\b .format - 
\b0 use braces \{\} in a string as empty places, call \'91
\b .format\'92 
\b0 on that string, and put arguments, arguments will be placed where the braces are\
\
>>> 'I have \{\} \{\}'.format('3' , 'bananas')\
'I have 3 bananas'\
>>> \
\

\b max - 
\b0 more with max\
\
	can call on multiple arguments\
\

\b sum - 
\b0 more with sum
\b \
\
	
\b0 can sum a list >sum[1,2] -> 3\
	can tell it what position to start sum  > >sum([1,2] , 1) -> 2\
	can tell it specifically sum(start=1 , iterable=[1,2]) -> 2\
\

\b sorted - 
\b0 return a new sorted list from the items in 
\i iterable 
\i0 \
	\
>>> ages = [32, 16, 22]\
>>> sorted(ages)\
[16, 22, 32]\
>>> print(sorted(ages))\
[16, 22, 32]
\i  \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\i0 \cf0 >>> print(sorted(ages, reverse=True))\
[32, 22, 16]\
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b \cf0 day 4
\b0 \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b\fs36 \cf0 Functions
\b0\fs24 \
\
will make our own funcitons\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b \cf0 why use functions\
\
1. Structure - label operations, complex\
\
2. Re-use - make an operation over and over easily\
\
3. Parameterization - if you can generalize the idea, you can make  function of it and use it anywhere\
\
4. Interface - it just works\'85don\'92t need to understand - trust code to do what it does\
\
\
How to write function\
\
> def function_name(argument , list):\
	*code block*\
	
\b0 return variable_name\
\
return is output value\
argument list is list of values, arguments, w/e
\b \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b0 \cf0 making a function does not call the function
\b \
\
example function\
\

\b0 making a function \'91calc_time\'92 will find time given miles traveled and mph\
\
> def calc_time(miles, mph):\
	time = mils / mph\
	return time\
\
> travel_time = calc_time(100 , 50)\
\
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b \cf0 Scope - STAY IN YOUR SCOPE!!\
	variables assigned in a scope *ONLY* guaranteed to be defined within that scope.\
\
	scope is a block of code operations\
	\
	if statement does not define scope\
	\
	defining function *will* define scope\
\
	
\i shadowing
\i0\b0  - when a defined variable inside the defining function (def), variable will take def 	definition\
		then variable can be defined and will be different\
\
		example: \
\
		name = 'Helen'\
		def set_name():\
    			name = 'David'\
    			print(name) #will print \'91David\'92\
\
		set_name()\
		print_name()\
				#will print \'91Helen\'92\
\

\b why define functions for each step?\
\
	1. Code explains itself\
	\
	2. Test parts in isolation\
	\
	3. Can re-use code\
\
\
naming hints\
\
\pard\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li720\fi-720\pardirnatural
\ls5\ilvl0\cf0 	1. be unambiguous\
{\listtext	\uc0\u8259 	}\
	2. units - use them\
{\listtext	\uc0\u8259 	}\
	3. mirror structure type\
{\listtext	\uc0\u8259 	}\
	4. type hints if necessary\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 \
\
3 hints for naming functions\
\
verbs + nouns\
\
\pard\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li720\fi-720\pardirnatural
\ls6\ilvl0\cf0 	1. unambiguous\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 \
\pard\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li720\fi-720\pardirnatural
\ls7\ilvl0\cf0 	2. reference return variable\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 \
\pard\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li720\fi-720\pardirnatural
\ls8\ilvl0\cf0 	3. identify arguments\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 \
\
**Describing a function you define\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b0 \cf0 \
use \'93\'94\'94 some description \'93\'94\'94\
\
explicit description of what function does - see example below:\
\
*how to print function description:\
\
	>def should_keep_guessing(assessment):\
    		"""Return if the program should keep prompting for guesses as a bool."""\
    		return assessment != 'Correct!'\
\
	>print(should_keep_guessing.__doc__)\
\
day 5\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b\fs28 \cf0 Tuple
\b0\fs24 \
\
	
\b Tuple: *immutable* list\
		literal\
		()\
		
\b0 >(1, 2, 3)\
		> one item (1,) , empty tuple()
\b \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b0 \cf0 	
\b operators
\b0  ==, cannot do [ ] =\
		\
		make tuple from list\
		> nums = [1, 2, 3]\
		> tuple(nums) -> (1, 2, 3)\
\
		hashable = immutable\
\
	Uses of Tuples\
\
\pard\tx1660\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li2160\fi-2160\pardirnatural
\ls9\ilvl2\cf0 {\listtext	1.	}multiples value w/ different meanings\
\pard\tx2380\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li2880\fi-2880\pardirnatural
\ls9\ilvl3\cf0 {\listtext	\uc0\u8259 	}
\b .items 
\b0 and 
\b .partition
\b0  return tuples \
{\listtext	\uc0\u8259 	}partition example > \
\pard\tx1660\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li2160\fi-2160\pardirnatural
\ls9\ilvl2\cf0 {\listtext	2.	}\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b\fs28 \cf0 Transforming Data\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b0\fs24 \cf0 price_pair = (\'91apple\'92 , 0.99)\
item , price = price_pair\
returns same as \'97\'97>\
item = price_pair[0]\
price = price_pair[1]\
\
for item, price in item_to_price.items()  - use this to call on both variables\
\
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b\fs28 \cf0 list comprehension in python\
\
***see file seqtest.py
\fs24 \
\
can use on any data structure\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b0 \cf0 prices_dollars = [1.50, 0.75]\
prices_cents = []\
for dollar_val in prices_dollars:\
    cents_val = dollars_val * 100\
    prices_cents.append(cents.val)\
\
****above code is done shorter with the code below****\
\
prices_cents = [dollar_val * 100 for dollar_val in prices_dollars]\
\
#code below finds all upper case in list\
words_in_document = \{'the' , 'cat' , 'hat', 'Justin'\}\
uppercase_words_in_document = \{word.upper() for word in words_in_document\}\
\
#below uses operation on a dictionary\
item_to_price_cents = \{\
  'apple': 99,\
  'pear': 150\
\}\
\
product_to_price_dollars = \{\
    product: prices_cents / 100\
    for product, prices_cents\
    in product_to_price_cents.items()\
\}\
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b \cf0 built in functions for sequences\
\
len() - displays length or # of entries\
reversed() - reverses order\
sorted() - numerical order\
\
can CAST one data type to another and back\
\pard\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li720\fi-720\pardirnatural
\ls10\ilvl0\cf0 {\listtext	\uc0\u8259 	}set(on a list or tuple)\
{\listtext	\uc0\u8259 	}list\
{\listtext	\uc0\u8259 	}tuple\
{\listtext	\uc0\u8259 	}list -> dict and back, list must be two tuples\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 \
example of working with dicts and using .items\
	dict(somedict.items()) == somedict\
\
	opposite of dict.items = dict([(\'91apple\'92, 99), (\'91pear\'92, 150)])\
\
enumerate( [ ] ) - gives an order to a list\
\
zip - takes two lists of different type, puts them in tuple\
	\
range - gives range\
	allows you to define range for an operation\
\
None - value used to set up other values\
	variable_name = None\
	\
	use instead of variable_name = \'91 \'91\
\
	return None\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b0 \cf0 day 6\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b\fs36 \cf0 files\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\fs24 \cf0 characteristics of files\
\
\pard\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li720\fi-720\pardirnatural
\ls11\ilvl0\cf0 {\listtext	\'95	}Files are persistent\
{\listtext	\'95	}Can communicate between instances of a program running\
{\listtext	\'95	}Files are a source of data\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b0 \cf0 Python can make an object called \'93file\'94\
\
Open a file in Python\
\
>open(\'91filename.txt\'92)\
\
Need to close file object - use a \'91with\'92 assignment statement\
\
>
\b with 
\b0 open(\'91phonebook.txt\'92) 
\b as
\b0  phone_book_file:\
	do_something_with(phone_book_file)\
\
does stuff, cleans up and \'91saves\'92\
\
Can input and output strings in file, numbers must be converted back/forth to strings\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b \cf0 READ file
\b0 \
\
Lines in a file are deliniated with 
\b *newlines*
\b0  ex: 
\b \\n
\b0 \
\
>
\b with
\b0  open(\'91phonebook.txt\'92) 
\b as
\b0  phone_book_file:\
	phone_book_file.readlines()\
\

\b .readlines - 
\b0 prints out lines straight no breaks\
\
	can\'92t call \'91readlines\'92 twice, or for loop\
\

\b for 
\b0 line 
\b in 
\b0 data_in_phonebook:\
	name, number = ine.strip().split()\
\

\b WRITE TO 
\b0 file\
\
Second argument is what you want to do with the file. Enable writing with \'93w\'94\
\
w = erases entire file\
\
example:\
\
>import random\
\
>with open ('google-10000-english-usa.txt') as dictionary:\
    all_words = dictionary.readlines()\
    #opens, reads lines, then closes\
\
>selected_word = ''\
>while len(selected_word >=4:)\
    selected_word = random.choice(all_words).strip()\
\
>print(selected_word)\
\
see slack example\
\
Day 7\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b\fs36 \cf0 Sorting\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\fs24 \cf0 how to\
\
sorted() 
\b0 sorts w/e list is in parent, list of lists will be sorted by first value, 2nd value will be tie breaker\
\
**note** can pass functions as values\
\

\b sorted by function\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b0 \cf0 can use function as key\
\
use .get \
\
max() and min() can key\
	>print(max(names, key=names_to_ages))\
\
see sorttest.py	\
\
#this is a code hint i got from google that I want to remember\
#it removes a character from each str item in a list of str's\
# mylist = [("aaaa8"),("bb8"),("ccc8"),("dddddd8")]\
# mylist = ' '.join(mylist).replace('8','').split()\
# print mylist\
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b \cf0 Day 9
\b0 \
\

\b more list sorting
\b0 \
\
how to sort list and print as columns\'85have to do it by hand\
\
see slack example\
\
dictionary comprehension\
	like list comps, use curly braces\
\

\b interleaving
\b0  - combine list by variable - interleave\
\

\b uninterleave
\b0  - reverse\
\
splat operator = *\
	use in list comprehensions\
	value in variable\
	gives value for each item in list\
\
this code is an example but doesn\'92t work:\
list1 = [1, 2, 3]\
list2 = ['a', 'b', 'c']\
list3 = [True, False, False]\
\
interleaved = list(zip(list1, list2, list3))\
uninterleaeved = list(zip(*interleaved)\
\
print (interleaved)\
\
print (uninterleaved)\
\

\b encode and decode\
\
ex:\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b0 \cf0 >>> b'hello'.decode('utf-8')\
'hello'\
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b\fs36 \cf0 Classes\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b0\fs24 \cf0 Classes - group together functions that work in the shared scope of the class\
	Defining of class creates a **type**\
\
\
Class is a collection of functions.\
Instance of a class/object is a bag of variables.\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b \cf0 Encapsulation\
\
	
\b0 classes version of functions being contracts\
\
	One person can work on implementation. One person can work on use.\
	They agree on contract, they don\'92t need to worry directly abut each other\'92s work.\
\
	The functions in a class can define contract.\
\
	The person that uses the functions doesn\'92t care how they are made.\
\
	Short form of class method calling is cool\'85you don\'92t have to know the exact class the instance has.\
\
\

\b\fs28 Pycharm IDE\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b0 \cf0 from pycharm website\
\
\'91project\'92 is a directory/folder\
\
new project>code guild directory\
\
hot tips \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b \cf0 \
Module\
\
.py files are Modules\
\
	It\'92s like copying the module code at the top of your code
\b0 \
\
in the target .py file you can import any top level item using the name of the Python film without the .py\
\
	modules can be nested\
	__init__.py allows directory to be module\
		then you can > import directory_name.module_name\

\b Using PyCharm tools
\b0 \
test file: in PyCharm must be configured, including test path, which is the name of these file you are making\
\
when test program uses *Class* methods to test = \
	import unittest\
	class TestName(unittest.TestCase):\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\fs24 \cf0 \
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\fs36 \cf0 Note:
\fs24  check out Kyle\'92s rain animation in this file: {\field{\*\fldinst{HYPERLINK "https://github.com/bizzcat/codeguild/blob/master/final_rainfall.py"}}{\fldrslt https://github.com/bizzcat/codeguild/blob/master/final_rainfall.py}}\
\
\
\'91magic methods\'92 \
	__getitem__\
\
	zip makes an object that acts like a list\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b\fs36 \cf0 Into. Web Applications\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\fs28 \cf0 3 parts\
	1. Database\
		\
		
\b0 Where data is persistently stored.\
		\
		It is another program that has a very generic interface that lets you save and fetch 		data.
\b \
		\
		
\b0 We will probably use PostgreSQL
\b \
\
	2. Back-End\
\
		
\b0 Web server - **business logic** - what happens\
		\
		Dynamically generates web pages.\
		When a person goes to yourwebsite.com/ponies it will figure out what\'92s on \'91/ponies\'92 		might fetch database and return content associated with it for display\
\
		Web framework - figure out how to generate output *content* from an input *path*
\b \
\
	3. Front-End\
\
		HTML/CSS/JS\
\
		
\b0 HTML - actual structured content\
		CSS describes the presentation of the content\
		JS is code for the user\'92s web browser to run to enable complex interactions with user.
\b \
\
		\
Interfact Principles\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b0 \cf0 \
Basic HTML/CSS/JS\
\
HTML - structures existing text\
CSS - specifies how things are displayed\
\
Mozilla developer tutorial: {\field{\*\fldinst{HYPERLINK "http://apps.timwhitlock.info/emoji/tables/unicode"}}{\fldrslt http://apps.timwhitlock.info/emoji/tables/unicode}}
\b \
		}